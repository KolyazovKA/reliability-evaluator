# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'input_params.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox


class Ui_Input_params(object):
	def setupUi(self, Input_params):
		Input_params.setObjectName("Input_params")
		Input_params.resize(420, 180)
		Input_params.setMinimumSize(QtCore.QSize(420, 142))
		Input_params.setMaximumSize(QtCore.QSize(420, 180))
		self.min_count_of_nodes = QtWidgets.QComboBox(Input_params)
		self.min_count_of_nodes.setGeometry(QtCore.QRect(300, 10, 101, 22))
		font = QtGui.QFont()
		font.setFamily("Calibri")
		font.setPointSize(14)
		font.setBold(False)
		font.setItalic(False)
		font.setWeight(50)
		self.min_count_of_nodes.setFont(font)
		self.min_count_of_nodes.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
		self.min_count_of_nodes.setStyleSheet("font: 14pt \"Calibri\";")
		self.min_count_of_nodes.setObjectName("min_count_of_nodes")

		self.add_item_min_nodes()

		self.label = QtWidgets.QLabel(Input_params)
		self.label.setGeometry(QtCore.QRect(20, 10, 271, 22))
		font = QtGui.QFont()
		font.setFamily("Calibri")
		font.setPointSize(14)
		self.label.setFont(font)
		self.label.setObjectName("label")
		self.label_2 = QtWidgets.QLabel(Input_params)
		self.label_2.setGeometry(QtCore.QRect(20, 40, 271, 22))
		font = QtGui.QFont()
		font.setFamily("Calibri")
		font.setPointSize(14)
		self.label_2.setFont(font)
		self.label_2.setObjectName("label_2")
		self.max_count_of_nodes = QtWidgets.QComboBox(Input_params)
		self.max_count_of_nodes.setEnabled(True)
		self.max_count_of_nodes.setGeometry(QtCore.QRect(300, 40, 101, 22))
		font = QtGui.QFont()
		font.setFamily("Calibri")
		font.setPointSize(14)
		font.setBold(False)
		font.setItalic(False)
		font.setWeight(50)
		self.max_count_of_nodes.setFont(font)
		self.max_count_of_nodes.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
		self.max_count_of_nodes.setStyleSheet("font: 14pt \"Calibri\";")
		self.max_count_of_nodes.setObjectName("max_count_of_nodes")

		self.add_item_max_nodes()

		self.label_3 = QtWidgets.QLabel(Input_params)
		self.label_3.setGeometry(QtCore.QRect(20, 100, 271, 22))
		font = QtGui.QFont()
		font.setFamily("Calibri")
		font.setPointSize(14)
		self.label_3.setFont(font)
		self.label_3.setObjectName("label_3")
		self.line = QtWidgets.QFrame(Input_params)
		self.line.setGeometry(QtCore.QRect(0, 80, 420, 16))
		self.line.setFrameShape(QtWidgets.QFrame.HLine)
		self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
		self.line.setObjectName("line")
		self.parameter = QtWidgets.QLineEdit(Input_params)
		self.parameter.setGeometry(QtCore.QRect(302, 100, 101, 22))
		font = QtGui.QFont()
		font.setFamily("Calibri")
		font.setPointSize(14)
		self.parameter.setFont(font)
		self.parameter.setObjectName("lineEdit")
		self.build_graph = QtWidgets.QPushButton(Input_params)
		self.build_graph.setGeometry(QtCore.QRect(14, 141, 391, 31))
		font = QtGui.QFont()
		font.setFamily("Calibri")
		font.setPointSize(14)
		self.build_graph.setFont(font)
		self.build_graph.setObjectName("pushButton")

		self.retranslateUi(Input_params)
		QtCore.QMetaObject.connectSlotsByName(Input_params)
		# self.min_count_of_nodes.activated.connect(self.update_max_nodes)
		# self.build_graph.clicked.connect(self.return_nodes_and_p)

	def retranslateUi(self, Input_params):
		_translate = QtCore.QCoreApplication.translate
		Input_params.setWindowTitle(_translate("Input_params", "Form"))
		self.min_count_of_nodes.setToolTip(_translate("Input_params",
		                                              "<html><head/><body><p align=\"center\"><span style=\" vertical-align:super;\"><br/></span></p></body></html>"))
		self.min_count_of_nodes.setWhatsThis(
			_translate("Input_params", "<html><head/><body><p align=\"center\">hello</p></body></html>"))
		self.fill_min_nodes(_translate=_translate)
		self.label.setText(_translate("Input_params", "Минимальное количество узлов:"))
		self.label_2.setText(_translate("Input_params", "Максимальное количество узлов:"))
		self.fill_max_nodes(_translate=_translate)
		self.label_3.setText(_translate("Input_params", "Параметр формирования графа:"))
		self.build_graph.setText(_translate("Input_params", "Построить граф"))

	def add_item_min_nodes(self):
		for i in range(3, 49):
			self.min_count_of_nodes.addItem("")

	def add_item_max_nodes(self):
		for i in range(4, 51):
			self.max_count_of_nodes.addItem("")

	def fill_min_nodes(self, _translate):
		for i in range(3, 49):
			self.min_count_of_nodes.setItemText(i - 3, _translate("Input_params", str(i)))

	def fill_max_nodes(self, _translate):
		for i in range(4, 51):
			self.max_count_of_nodes.setItemText(i - 4, _translate("Input_params", str(i)))

	def update_max_nodes(self):
		self.max_count_of_nodes.clear()
		min_nodes_index = self.min_count_of_nodes.currentIndex()

		for i in range(min_nodes_index + 1, 52):
			self.max_count_of_nodes.addItem("")
		for j in range(min_nodes_index + 1, 52):
			self.max_count_of_nodes.setItemText(j - min_nodes_index - 1,
			                                    QtCore.QCoreApplication.translate("Input_params", str(j + 3)))
	def return_nodes_and_p(self):
		if self.parameter.text() == "":
			QMessageBox.warning(self.parent(), "Ошибка", "Введите параметр формирования графа")
			return
		try:
			value = float(self.parameter.text())
			if value < 0 or value > 1:
				QMessageBox.warning(self.parent(), "Ошибка", "Неправильное значение параметра. \n"
				                                             "Корректное значение лежит в промежутке между 0 и 1")
				return
		except ValueError:
			QMessageBox.warning(self.parent(), "Ошибка", "Неправильное значение параметра. \n"
			                                             "Корректное значение лежит в промежутке между 0 и 1")
			return
		print("Ok")
		self.min_count_of_nodes_values = self.min_count_of_nodes.currentText()
		self.max_count_of_nodes_values = self.max_count_of_nodes.currentText()
		self.parameter_values = self.parameter.text()
